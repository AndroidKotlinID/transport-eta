apply plugin: 'com.android.application'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion build_versions.compile_sdk
    defaultConfig {
        applicationId "com.joaquimley.transporteta"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode app_version.versionCode
        versionName app_version.versionName
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "com.joaquimley.transporteta.ui.test.TestRunner"

        // The following argument makes the Android Test Orchestrator run its
        // "pm clear" command after each test invocation. This command ensures
        // that the app's state is completely cleared between tests.
        testInstrumentationRunnerArguments clearPackageData: 'true'

        missingDimensionStrategy 'environment', ['prod', 'mock']
    }

    // Always show the result of every unit test, even if it passes.
    testOptions {
        execution 'ANDROID_TEST_ORCHESTRATOR'
        unitTests.all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }
        }
    }

//    testOptions {
//        execution 'ANDROID_TEST_ORCHESTRATOR'
//    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
    }

    buildTypes {
        debug {
            versionNameSuffix "-dev"
            applicationIdSuffix ".debug"
            debuggable true
            testCoverageEnabled true
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

configurations.all {
    resolutionStrategy {
        force deps.kotlin.stdlib
        force deps.support.annotations
    }
}

kapt {
    correctErrorTypes = true
}

androidExtensions {
    experimental = true
}

dependencies {
    // Modules
    implementation project(':sms')
    implementation project(':presentation')
    // Javax
    implementation deps.javax.inject
    compileOnly deps.javax.annotation
    // Rx
    implementation deps.rxjava2
    implementation deps.rx_android
    // Kotlin
    implementation deps.kotlin.rx
    implementation deps.kotlin.stdlib
    // Dagger
    implementation deps.dagger.runtime
    implementation deps.dagger.android
    implementation deps.dagger.android_support
    kapt deps.dagger.compiler
    kapt deps.dagger.android_support_compiler
    // Support
    implementation deps.support.v4
    implementation deps.support.design
    implementation deps.support.cardview
    implementation deps.support.app_compat
    implementation deps.support.constraint
    implementation deps.support.annotations
    implementation deps.support.recyclerview
    // Utils
    implementation deps.glide
    implementation deps.timber
    implementation deps.lottie
    // ACC
    kapt deps.lifecycle.compiler
    implementation deps.lifecycle.extensions

    /***********
     * Testing *
     ***********/

    // Local unit tests
    kaptTest deps.dagger.compiler
    testImplementation deps.junit
    testImplementation deps.hamcrest
    testImplementation deps.kotlin.test
    testImplementation deps.mockito.kotlin
    testImplementation deps.mockito.inline
    testImplementation deps.arch_core.testing
    // Resolve conflicts between main and local unit tests
    testImplementation deps.support.core_utils
    testImplementation deps.support.annotations
    // Android unit tests
    kaptAndroidTest deps.dagger.compiler
    androidTestImplementation deps.javax.inject
    androidTestImplementation deps.mockito.kotlin
    androidTestImplementation deps.mockito.android
    // Android Testing Support runner and rules and AAC
    androidTestUtil deps.atsl.orchestrator
    androidTestImplementation deps.atsl.rules
    androidTestImplementation deps.atsl.runner
    androidTestImplementation deps.arch_core.testing
    // Espresso UI Testing
    androidTestImplementation deps.espresso.core
    androidTestImplementation deps.espresso.contrib
    androidTestImplementation deps.espresso.intents
    // Resolve conflicts between main and test APK:
    androidTestImplementation deps.support.v4
    androidTestImplementation deps.support.design
    androidTestImplementation deps.support.app_compat
    androidTestImplementation deps.support.annotations
}